#!/bin/bash
set -e -o pipefail
SCRIPT="${0##*/}"
trap "echo 'ERROR[${SCRIPT}]: Internal error' >&2" ERR

## Usage
__USAGE() {
  cat >&2 <<EOF
USAGE: ${SCRIPT} [<commit|env:GITHUB_SHA>]

SYNOPSIS:
  Look for changes in the TAGS file for the given commit and update the Git Tags
  to match the configured Git Commits.
EOF
}

# Argument
# REF: https://docs.github.com/en/actions/reference/environment-variables
if [ -n "${1}" ]; then
  TAGS_COMMIT="${1}"
elif [ -n "${GITHUB_SHA}" ]; then
  TAGS_COMMIT="${GITHUB_SHA}"
else
  __USAGE
  exit 1
fi


## Quirks

# FIX: "error: Could not access '<commit>^-'" in GitHub Actions
git config --global --add safe.directory /github/workspace

# Debug
#git log --pretty=oneline | head -n 10 || true


## Main

# TAGS changed ?
changed="$(git diff --name-only "${TAGS_COMMIT}^-" -- ./TAGS)"
if [ -z "${changed}" ]; then
  echo "INFO[${SCRIPT}]: No TAGS change detected; bailing out"
  exit 0
fi

# Update tags
tagged=0
while read -r tag commit _; do
  commit_current="$(git show-ref --hash --tags "refs/tags/${tag}" || true)"
  if [ "${commit_current}" == "${commit}" ]; then
    echo "INFO[${SCRIPT}]: Tag '${tag}' already point to commit '${commit}'; skipping"
    continue
  fi
  echo "INFO[${SCRIPT}]: Updating tag '${tag}' to point to commit '${commit}' ..."
  if [ -n "${DRYRUN}" ] || [ -n "${TAGS_DRYRUN}" ]; then
    echo "NOTICE[${SCRIPT}]: Dry-running; skipping"
    continue
  fi
  git tag --force "${tag}" "${commit}"
  tagged=$(( tagged+1 ))
done < <(grep -vE '^\s*(#|$)' ./TAGS)

# Push updated tags
if [ "${tagged}" -gt 0 ]; then
  echo "INFO[${SCRIPT}]: Pushing updated tags to GitHub ..."
  if [ -n "${DRYRUN}" ] || [ -n "${TAGS_DRYRUN}" ]; then
    echo "NOTICE[${SCRIPT}]: Dry-running; bailing out"
    exit 0
  fi
  git push --force --tags
else
  echo "INFO[${SCRIPT}]: No tag either updated nor pushed to GitHub"
fi
